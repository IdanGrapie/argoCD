name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # Use PAT for checkout

      - name: Setup Git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Fetch all tags
        run: git fetch --tags

      - name: Calculate new version and create tag
        id: tag_version
        run: |
          # Get the latest tag
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag: $latest_tag"
          
          # Increment the patch version. Assumes the tag is in 'v<major>.<minor>.<patch>' format
          if [[ $latest_tag =~ (v[0-9]+.[0-9]+.[0-9]+) ]]; then
            new_tag=$(echo $latest_tag | awk -F. '{print $1"."$2"."$3+1}')
            echo "New tag: $new_tag"
            echo "new_tag=$new_tag" >> $GITHUB_ENV
            git tag -a "$new_tag" -m "New release $new_tag"
          else
            echo "No valid semver tag found."
            echo "new_tag=v0.1.0" >> $GITHUB_ENV
            git tag -a "v0.1.0" -m "First release v0.1.0"
          fi

      - name: Push tag
        run: git push origin ${{ env.new_tag }}
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  build-and-push-docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        run: |
          new_tag=${{ needs.build.outputs.new_tag }}
          docker build -t idan5567/k8s_test:$new_tag .
          docker push idan5567/k8s_test:$new_tag


